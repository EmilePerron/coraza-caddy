name: Test and Build

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout libinjection
      uses: actions/checkout@v2
      with:
        repository: libinjection/libinjection
    - name: Build and install libinjection
      run: |
        gcc -std=c99 -Wall -Werror -fpic -c src/libinjection_sqli.c -o libinjection_sqli.o 
        gcc -std=c99 -Wall -Werror -fpic -c src/libinjection_xss.c -o libinjection_xss.o
        gcc -std=c99 -Wall -Werror -fpic -c src/libinjection_html5.c -o libinjection_html5.o
        gcc -dynamiclib -shared -o libinjection.so libinjection_sqli.o libinjection_xss.o libinjection_html5.o
        sudo cp *.so /usr/local/lib
        sudo cp *.o /usr/local/lib
        sudo cp src/*.h /usr/local/include/
        sudo chmod 444 /usr/local/include/libinjection*
        sudo ldconfig
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Tests and coverage
      run: CGO_ENABLED=1 go test -v -coverprofile=coverage.out ./...
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}        
    - name: Get xcaddy
      run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
    - name: Build
      run: CGO_ENABLED=1 xcaddy build --with github.com/jptosso/coraza-caddy   